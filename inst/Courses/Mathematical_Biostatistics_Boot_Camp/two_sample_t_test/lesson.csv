Class,Output,AnswerChoices,CorrectAnswer,AnswerTests,Hint,Figure,FigureType,VideoLinktext,"In this module, you are going to complete a two sample t-test step-by-step using the 'mtcars' dataset. This dataset comes built in to R and gives a series of design and performance characteristics for 32 car models built in 1973-74.",NA,NA,NA,NA,NA,NA,NAtext,"We are interested in determining whether there is a significant difference between the average fuel efficiency for cars with automatic and manual transmissions. In this dataset, miles per gallon is given by the 'mpg' variable and transmission type is given by the 'am' variable (0 = automatic, 1 = manual).",NA,NA,NA,NA,NA,NA,NAtext,"Therefore, our null hypothesis (H0) is that the average fuel efficiency is the same for cars with automatic and manual transmissions. In other words, the difference between the average mpg values for cars with automatic and manual transmissions is not statistically significantly different from zero. ",NA,NA,NA,NA,NA,NA,NAtext,"Our alternative hypothesis (H1) is that there is a statistically significant difference in miles per gallon between cars with automatic and manual transmissions and therefore the difference does not equal zero. In order to either accept or reject the null hypothesis, we must compute our t-statistic and compare it to the appropriate t critical value.",NA,NA,NA,NA,NA,NA,NAtext,"Since we are interested in comparing the average mpg of cars with different transmission types, let's separate the entire 'mtcars' dataset into two smaller datasets: one containing the cars with automatic transmissions and one containing the cars with manual transmissions. ",NA,NA,NA,NA,NA,NA,NAcmd_question,"Let's begin by viewing the 'am' column from the dataset. For now, do NOT assign it to a new variable.",NA,mtcars$am,swirl1cmd=mtcars$am,Type 'mtcars$am' without quotes and press Enter.,NA,NA,NAcmd_question,"Now, type the following in order to look at only the data for the cars with automatic transmissions and assign it to the variable 'auto': 'auto <- mtcars[mtcars$am==0, ]'",NA,"auto <- mtcars[mtcars$am==0, ]","swirl1cmd=auto <- mtcars[mtcars$am==0, ]","Type 'auto <- mtcars[mtcars$am==0, ]' without quotes and press Enter.",NA,NA,NAtext,"As you can see above, in the first entry of the brackets, we specified which rows we are interested in. In this case, we wanted to extract the rows in which the transmission type equaled '0', representing automatic. In R, the boolean operator ""=="" is used as a comparison tool and extracts only the data for which the values on the left side of the ""=="" are equivalent to the values on the right side of the ""=="".",NA,NA,NA,NA,NA,NA,NAtext,"In the second entry of the brackets, we specified which columns we are interested in. In this case, we wanted to first extract all of the column information. Leaving the second entry blank signals to R that you would like all of the columns. ",NA,NA,NA,NA,NA,NA,NAcmd_question,Try performing this same procedure for cars with manual transmissions and assign it to the variable 'man'.,NA,"man <- mtcars[mtcars$am==1, ]","swirl1cmd=man <- mtcars[mtcars$am==1, ]","Type 'man <- mtcars[mtcars$am==1, ]' without quotes and press Enter.",NA,NA,NAcmd_question,"Now that we have broken our data into two distinct groups, we can condense our dataset even further by focusing only on the particular variable of interest. We are only interested in comparing the average mpg of cars with different transmission types, so use the syntax learned previously to extract the entire 'mpg' column from our new dataset 'auto' and store it in a new variable called 'autoMPG'. ",NA,autoMPG <- auto$mpg,swirl1cmd=autoMPG <- auto$mpg,Type 'autoMPG <- auto$mpg' without quotes and press Enter. ,NA,NA,NAcmd_question,Perform this command again but for cars with manual transmissions and store it in a new variable called 'manMPG'.,NA,manMPG <- man$mpg,swirl1cmd=manMPG <- man$mpg,Type 'manMPG <- man$mpg' without quotes and press Enter.,NA,NA,NAtext,"For the two-sample t-test, we need to compute 6 important values: the difference in sample means, the assumed difference in population means, the sample variance for each group, and the sample size for each group.",NA,NA,NA,NA,NA,NA,NAcmd_question,Our first step is to compute the mean value for the 'autoMPG' data. Compute the mean and store it in a new variable called 'sampMeanAutoMPG'. ,NA,sampMeanAutoMPG <- mean(autoMPG),swirl1cmd=sampMeanAutoMPG <- mean(autoMPG),Type 'sampMeanAutoMPG <- mean(autoMPG)' to compute the mean of 'autoMPG' and store it in the variable 'sampMeanAutoMPG'.,NA,NA,NAcmd_question,Also compute the mean value for the 'manMPG' data and store it in a new variable called 'sampMeanManMPG'. ,NA,sampMeanManMPG <- mean(manMPG),swirl1cmd=sampMeanManMPG <- mean(manMPG),Type 'sampMeanManMPG <- mean(manMPG)' to compute the mean of 'manMPG' and store it in the variable 'sampMeanManMPG'.,NA,NA,NAcmd_question,"Now, subtract the value contained in the variable 'sampMeanAutoMPG' from the value contained in the variable 'sampMeanManMPG' to find the difference in sample means and store it in a new variable called 'diffSampMean'. ",NA,diffSampMean <- sampMeanManMPG - sampMeanAutoMPG,swirl1cmd=diffSampMean <- sampMeanManMPG - sampMeanAutoMPG,Type 'diffSampMean <- sampMeanManMPG - sampMeanAutoMPG' to compute the difference in sample means and store it in a new variable called 'diffSampMean'.,NA,NA,NAtext,"You could also reverse the order and subtract 'sampMeanAutoMPG' from sampMeanManMPG' and you would still end up with the correct answer. However, in this example we will stick with the difference calculated the first way.",NA,NA,NA,NA,NA,NA,NAcmd_question,"We perform our t-test under the assumption that the null hypothesis is true, so the difference in population means is assumed to be zero. This is because the null hypothesis states that there is no significant difference in fuel efficiency between cars with automatic and manual transmissions. Assign the value zero to a new variable called 'diffPopMean'. ",NA,diffPopMean <- 0,swirl1cmd=diffPopMean <- 0,Type 'diffPopMean <- 0' without quotes and press Enter.,NA,NA,NAcmd_question,"Next, use the 'var' function to compute the variance of 'autoMPG' and store it in a new variable called 'sampVarAutoMPG'.",NA,sampVarAutoMPG <- var(autoMPG),swirl1cmd=sampVarAutoMPG <- var(autoMPG),Type 'sampVarAutoMPG <- var(autoMPG)' to compute the sample variance for the cars with automatic transmissions.,NA,NA,NAcmd_question,"Now, compute the variance for the cars with manual transmissions and store it in a new variable called 'sampVarManMPG'.",NA,sampVarManMPG <- var(manMPG),swirl1cmd=sampVarManMPG <- var(manMPG),Type 'sampVarManMPG <- var(manMPG)' to compute the sample variance for the cars with manual transmissions.,NA,NA,NAcmd_question,"The last two values we need are the sample sizes for each group. In order to calculate the number of cars with automatic transmissions, use the 'length' function on the variable 'autoMPG' and store the result in a new variable called 'nAuto'. Try this now.",NA,nAuto <- length(autoMPG),swirl1cmd=nAuto <- length(autoMPG),Type 'nAuto <- length(autoMPG)' to record the number of cars with automatic transmissions.,NA,NA,NAcmd_question,Use the same 'length' function but on the cars with manual transmissions and store the result in a new variable called 'nMan'.,NA,nMan <- length(manMPG),swirl1cmd=nMan <- length(manMPG),Type 'nMan <- length(manMPG)' to record the number of cars with manual transmissions.,NA,NA,NAtext,"Recall that the numerator for a two sample t-statistic is computed by subtracting the difference in assumed population means from the difference in sample means. The denominator is computed by taking the square root of the sum of the following two quantities: the variance for our group of cars with manual transmissions divided by the size of that group, and the variance for our group of cars with automatic transmissions divided by the size of that group. This is difficult to express in words, but very easy to compute.",NA,NA,NA,NA,NA,NA,NAcmd_question,"Using your knowledge of this equation, first try to compute the numerator of this t-statistic and store it in a new variable called 'numer'.",NA,numer <- diffSampMean-diffPopMean,swirl1cmd=numer <- diffSampMean-diffPopMean,Type 'numer <- diffSampMean-diffPopMean' to subtract the difference in assumed population means from the difference in sample means.,NA,NA,NAcmd_question,"Now, try computing the denominator of this t-statistic and store it in a new variable called 'denom'.",NA,"denom <- sqrt(sampVarManMPG/nMan + sampVarAutoMPG/nAuto)

","swirl1cmd=denom <- sqrt(sampVarManMPG/nMan + sampVarAutoMPG/nAuto)

",Type 'denom <- sqrt(sampVarManMPG/nMan + sampVarAutoMPG/nAuto)' to compute the denominator of the t-statistic.,NA,NA,NAcmd_question,"Since we have now computed both the numerator and the denominator of the t-statistic, perform the simple calculation needed to find the actual two sample t-statistic value and store this value in a new variable called 'tStat'.",NA,tStat <- numer/denom,swirl1cmd=tStat <- numer/denom,Type 'tStat <- numer/denom' to compute the t-statistic and store it in a new variable called 'tStat'.,NA,NA,NAtext,"Now that we have our t-statistic, we must compare it to our t critical value. In order to do this, we need to specify the t distribution corresponding to the correct degrees of freedom. In this case we cannot assume a common variance since we have independent sample variances. The formula for calculating the degrees of freedom is fairly complex and you are not expected to have committed it to memory.",NA,NA,NA,NA,NA,NA,NAcmd_question,"Therefore, use the following equation in order to compute the degrees of freedom for this two sample test and store it in a new variable called 'myDF': (sampVarManMPG/nMan + sampVarAutoMPG/nAuto)^2 / ((sampVarManMPG/nMan)^2/(nMan - 1) + (sampVarAutoMPG/nAuto)^2/(nAuto - 1))",NA,myDF <- (sampVarManMPG/nMan + sampVarAutoMPG/nAuto)^2 / ((sampVarManMPG/nMan)^2/(nMan - 1) + (sampVarAutoMPG/nAuto)^2/(nAuto - 1)),swirl1cmd=myDF <- (sampVarManMPG/nMan + sampVarAutoMPG/nAuto)^2 / ((sampVarManMPG/nMan)^2/(nMan - 1) + (sampVarAutoMPG/nAuto)^2/(nAuto - 1)),Copy and paste the provided formula and store it in a new variable called 'myDF'.,NA,NA,NAtext,"Before moving on to our final calculations, let's view the contents of the variables involved. Remember that typing a variable's name and pressing Enter will show you the contents of that variable.",NA,NA,NA,NA,NA,NA,NAcmd_question,"View the contents of our t-statistic variable, 'tStat', now.",NA,tStat,swirl1cmd=tStat,Type 'tStat' and press Enter.,NA,NA,NAcmd_question,"View the contents of our degrees of freedom variable, 'myDF', now.",NA,myDF,swirl1cmd=myDF,Type 'myDF' and press Enter.,NA,NA,NAtext,"Remember that a p-value gives us the probability of getting a t-statistic as or more extreme than the one we actually got from the data. Therefore, since we have a positive t-statistic here, we want to first find the area under the t-distribution curve to the right of the value of our t-statistic. Then, since the t-distribution is symmetrical about 0, we can multiply this value by 2 to get the p-value for a two-sided test.",NA,NA,NA,NA,NA,NA,NAtext,"Let's compute the area under the curve to the right of our t-statistic using R's 'pt' function. As a reminder, the 'pt' function requires that you specify the variable name of your test statistic, that 'df' equals the variable name of your degrees of freedom, and that you clarify whether you are looking to the left or the right of your t-statistic. If you are interested in the upper tail (which we are here) then you need to include the specification 'lower.tail=FALSE'. If you are looking to the left at the lower tail then you do not need to include anything additional.",NA,NA,NA,NA,NA,NA,NAcmd_question,"Use the 'pt' function to compute the probability of getting a t-statistic that's greater than the value of the one we got and store this quanitity to a new variable called 'pVal1'. If you can't figure this one out on your own, then the hint will help you.",NA,"pVal1 <- pt(tStat, df = myDF, lower.tail=FALSE)","swirl1cmd=pVal1 <- pt(tStat, df = myDF, lower.tail=FALSE)","Type 'pVal1 <- pt(tStat, df = myDF, lower.tail=FALSE)' and press Enter.",NA,NA,NAtext,"To reiterate, the variable 'pVal1' now stores the probability of getting a t-statistic greater than or equal to the one we got. However, since we are interested in both extremes (i.e. a two-sided test), we must multiply this probability by 2 to get our official p-value!",NA,NA,NA,NA,NA,NA,NAcmd_question,Let's do this now. Assign the new probability to the variable 'pVal' ,NA,pVal <- pVal1*2,swirl1cmd=pVal <- pVal1*2,Type 'pVal <- pVal1*2' without quotes and press Enter.,NA,NA,NAcmd_question,Let's look at the the value of our p-value. Type 'pVal' and press Enter.,NA,pVal,swirl1cmd=pVal,Type 'pVal' and press Enter.,NA,NA,NAtext,"Since our p-value is well below 0.05 (the most commonly used significance level), we can safely reject our null hypothesis and conclude that there is a statistically significant difference in miles per gallon between cars with automatic and manual transmissions.",NA,NA,NA,NA,NA,NA,NAtext,"The most likely explanation for this difference is that most of the cars with manual transmissions are lighter in weight than those with automatic transmissions. As we mentioned in the last module, lower vehicle weight is typically associated with increased fuel efficiency.",NA,NA,NA,NA,NA,NA,NAcmd_question,"Let's use the 't.test' function we learned in the previous module to ensure that our manual calculations are correct. This time you need to specify the variable name corresponding to the group of cars with automatic transmissions, the variable name corresponding to the group of cars with manual transmissions, and whether the test is one-sided or two-sided, by setting 'alternative' equal to either ""one.sided"" or ""two.sided"" (notice the double quotes around these).",NA,"t.test(autoMPG, manMPG, alternative=""two.sided"")","swirl1cmd=t.test(autoMPG, manMPG, alternative=""two.sided"")","Type 't.test(autoMPG, manMPG, alternative=""two.sided"")' and press Enter. Make sure to put double quotes around the 'alternative'.",NA,NA,NAtext,"Success!!! Your p-values are equal! In the future, using the 't.test' function will save you time and reduce your chances of making a computational error. However, it's important for you to understand the calculations behind the t-test procedure when comparing two groups, so that you properly interpret the results.",NA,NA,NA,NA,NA,NA,NA